services:
  primary:
    image: postgres:15
    container_name: primary
    volumes:
      - ./primary/init:/docker-entrypoint-initdb.d
      - postgresPrimaryData:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: statelessCommerce
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "${PRIMARY_HOST_PORT}:5432"
    networks:
      - postgresnet
      - clientnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d statelessCommerce"]
      interval: 5s
      timeout: 5s
      retries: 5

  replica:
    build:
      context: ./replica
    container_name: replica
    depends_on:
      primary:
        condition: service_healthy
    volumes:
      - postgresReplicaData:/var/lib/postgresql/data
      - postgresPrimaryData:/primary_data:ro
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "${REPLICA_HOST_PORT}:5432"
    networks:
      - postgresnet
      - clientnet

  python_client:
    build:
      context: ./python_client
    container_name: python_client
    working_dir: /app
    volumes:
      - ./solutions:/solutions
    command: tail -f /dev/null
    networks:
      - clientnet
    depends_on:
      - primary
      - replica
    environment:
      PRIMARY_HOST: primary
      REPLICA_HOST: replica
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: statelessCommerce

volumes:
  postgresPrimaryData:
    name: statelessCommercePrimaryData
  postgresReplicaData:
    name: statelessCommerceReplicaData

networks:
  postgresnet:
    driver: bridge
  clientnet:
    driver: bridge